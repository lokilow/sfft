# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Elixir CI

on:
  push:
    branches: [ "main"]
  pull_request:
    branches: [ "main" ]

env:
  MIX_ENV: test

permissions:
  contents: read

jobs:
  build_and_test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Check sqlite3 version
      run: sqlite3 --version
    - name: Reinstall sqlite3
      run: |
        download_link="https://www.sqlite.org/2023/sqlite-tools-linux-x64-3440200.zip"
        wget "$download_link" -P /tmp
        unzip "/tmp/$(basename "$download_link")" -d /tmp
        sudo install /tmp/sqlite3 /usr/local/bin/
    - name: Check sqlite3 version
      run: sqlite3 --version
    - name: Set up Elixir
      uses: erlef/setup-beam@61e01a43a562a89bfc54c7f9a378ff67b03e4a21 # v1.16.0
      with:
        elixir-version: '1.16.2' # [Required] Define the Elixir version
        otp-version: '26.2.5'      # [Required] Define the Erlang/OTP version
    - name: Restore dependencies cache
      uses: actions/cache@v3
      with:
        path: deps
        key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
        restore-keys: ${{ runner.os }}-mix-
    - name: Install dependencies
      run: mix deps.get
    - name: Compile
      run: mix compile --warnings-as-errors 
    - name: Check formatted
      run: mix format --check-formatted
    - name: Credo
      run: mix credo
    - name: Test
      run: mix test
